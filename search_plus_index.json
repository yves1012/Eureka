{"./":{"url":"./","title":"Eureka","keywords":"","body":"Eureka 阿基米德发现浮力原理时，国王怀疑金匠在做王冠时私吞了黄金，于是便请阿基米德想方法进行检验。阿基米德冥思苦想数日，却终究不得其解，有一日他坐进澡盆准备洗澡，看到水往外溢，霎时灵光乍现，想出了测量方法，他激动得连衣服都没顾上穿就跑到了街上，大喊着：“Eureka！Eureka！”。 从此，当人们解决了一个盘旋于心中困扰已久的重要问题或有了重大发现后，终于有了一个词可以让他们在一瞬间释放自己的狂喜和雀跃：Eureka！ 初衷 之前学习新知识、新概念陷入一个比较大的误区，总是花费较多时间去熟识理念层面的内容，不料有些内容今天了解了，明天就忘了，更是缺乏笔记性的资料与实际操作，免不了如过眼云烟转瞬即逝。零碎写过的一些笔记，不系统且保管不善，自己知道明明学习过、总结过的知识，到使用时硬是找不到，不免些许遗憾。于是打算弄一个类似于图书馆的地方统一保管，以便使用时及时查询。 同时，强制自己按时做一些事情，稍微克服本身存在的散漫习性，不要三天打鱼两天晒网，巩固习得性成果，养成持续学习、持续输出的习惯，正所谓纸上得来终觉浅，绝知此事要躬行。 联系 时间有限，经历有限，最好不要联系我，更不要加什么微信，没有意义。何况我不喜欢被打扰，尤其厌恶工作时间被碎片化，至今手机一直都是处于静音状态，任何软件都是禁止通知。 如果你确实需要联系我，比如获取相关资源，咨询技术问题，邮件地址：yves1012@163.com 。 祝平安喜乐！ var className='atoc';"},"English.html":{"url":"English.html","title":"英语学习安排","keywords":"","body":"英语学习安排 练习素材 练习方法 进度记录 现在的最大的问题就是听不懂，尤其不大明白native speaker说的内容，至于阅读与写作倒是马马虎虎，因而下定决心要好好增强下自己的听力与口语能力。以前用的一些方法，例如泛听等等都不大奏效，近来发现一个比较好的成功案例，下决心实践一下。 练习素材 练习方法 YouZack英语听力逐句精听 第一遍从头到尾听，不要看字幕。 第二遍再从头到尾听，遇到第一遍没听懂的这个句子，你点一下【这句听不懂】按钮，但是这时候也不要暂停，还是一路从头走到尾，把这段里边所有的没听懂的句子都点完了【这句听不懂】之后。 第三遍看每一句【这句听不懂】的原文，这个原文里边不懂的单词、不懂的语法就去查，搞明白了之后，然后就闭着眼不看字幕，把一句话反复去听直到能够听懂为止，再听下一句话。 所有的句子都听懂了之后，然后从头到尾再不看字幕、不暂停的把音频听一遍，如果发现还是有不懂的再重复以上步骤，直到这一段音频能够懂为止。 进度记录 练习材料 开始时间 进度 效果评价 新概念第一册 2021-1-9 完成 完全能听懂，完全能理解，主要是材料难度太低 新概念第二册 2021-2-1 开始练习 开始练习，比第一册难度多一点 var className='atoc';"},"ecommerce/work-arrangement.html":{"url":"ecommerce/work-arrangement.html","title":"独立站站长怎么安排一天的工作","keywords":"","body":"独立站站长怎么安排一天的工作 var className='atoc';"},"invest/principle.html":{"url":"invest/principle.html","title":"理财投资务必牢记初心","keywords":"","body":"理财投资务必牢记初心 理财投资进阶其实并非必须 几条需要遵循的原则 先理财后投资 绝大部分预测与择时操作是在价值毁灭 要分散，不要预测 不要线性思维 资管的本质是信任 区分技能与负技能 需要警惕的5种投资情绪 理财投资进阶其实并非必须 现在的水平就是个入门级选手，不会技术分析也不会财务报告，当然也不会瞎搞，盯着一个目标就一直拿着不放手，反正自己的目的就是强制储蓄，早点实现财务自由。也想过继续深入体系化学习，但感觉大概率很难提升了，毕竟精力有限，主业仍需耗费大量时间，作罢，还是在确定性的收入渠道上好好努力。 几条需要遵循的原则 先理财后投资 先把账算明白了，知道自己有多少钱、有哪些钱能用来投资，然后才是投资。不知道自己有多少钱、什么时候用钱，着急进行投资布局则很容易被坑。贴一个网上的例子时时提醒下自己（6月卖出买房，7月市场大涨）： 绝大部分预测与择时操作是在价值毁灭 不管对于散户还是机构而言，择时操作平均带来的都是负收益。很多人在投资的时候不是更多考虑要不要择时，而是没考虑到自己的很多想法本身就是在择时。当我们开始考虑：「xxx 最近涨的比较多了，要不要……」这类问题的就是，就已经是在择时了。 要分散，不要预测 虽然牛熊、震荡市里面不同的标的表现会不一样，但别试图预测什么时候是牛熊、什么时候是震荡市，最理性的选择是分散配置，或者选择性放弃。 不要线性思维 资管的本质是信任 不管是跟投还是选择主动基金，核心都是信任，信任有时候比业绩更重要。选择比你厉害、比你聪明、人品可靠的的基金经理或者主理人，然后不要给他们帮倒忙。当大家恐慌的时候，越要去靠谱的主理人那里找认同，维持自我。虽然看起来像个菜鸡，但能赚到钱。 区分技能与负技能 投资相关的很多活动都是负技能，方向错了，越勤奋、收益越少。同理，入市就赚钱不一定是是好事儿，因为很容易因为行情特别好而误以为自己的种种收益都是来源于能力。 某些时间段的结构化行情会把一些想法反复强化、验证，直到深信不疑，让你以为这就是市场规律。最可怕的是因为这个判断赌上全部身家，结果遇到一个反转的瞬间全面崩塌了，这种事儿股市里太多了。 需要警惕的5种投资情绪 读《投资最重要的事儿》，里面整理的常见五类投资情绪： 得到更多的渴望 担心错过的恐惧 与他人比较的倾向 群体的影响 对胜利的期待 var className='atoc';"},"invest/compound-interest.html":{"url":"invest/compound-interest.html","title":"复利的力量","keywords":"","body":"复利的力量 复利被称作是人类历史上最伟大发明，是人类第八大奇迹，但是这个东西绝大多数人感受不到，因为太多的人都等不起。所谓复利，就好比你拿1000元投资，年化收益是10%，那么第一年你的本金就变成了1100元，而第二年你还是10%的收益，就赚了110元，于是总账户就变成了就变成了1210元。公式其实就是1000元本金×（1+10%）的多少次方，之后的多少年就是多少次方，学过一点数学就知道这个指数函数的威力。 算一笔账，比如年化收益10%，持续20年，那就是1.1的20次方，结果就是6.72倍，也就是说你在今后的20年，本金增长了6.72倍。原来的1万变成了6.72万，原来的10万，变成了67.2万，那么30年呢？结果是17.5倍，40年是45倍，50年是117倍，所以你看见了吧，复利越到后面，就会呈现出爆发式的增长。那么20%的年化增长呢，在10年增长6.2倍，20年增长38倍，50年的时候，就是惊人的9100倍。 年化收益率 10年 20年 50年 10% 2.6 6.72 117 20% 6.2 38.33 9100 西格尔教授，就是写股市长线法宝的那位，他做过统计，1800年你投下1美元在股市上，到2013年你将拥有1800万美元，远远将通胀抛在身后，可见复利的力量，越到后来越是惊人，而债券只能最后拥有29100美元，相差了近千倍，国债就更差了，只有5383倍回报，黄金只有85倍回报，这还是在金本位解体的情况下才出现的。而物价则涨了19倍，换句话说1美元如果不投资，200年后购买力下降95%。 当然没有人可以活200年，所以你一生也不可能产生1800万倍的回报，50年增长50倍就已经算是很不错的成绩了，意味着年化8%，而50年100倍，意味着你基本要实现年化10%，而现在很多人一张嘴就是要追求年化15%的增长，那么你知道这是一个怎样的成绩吗？意味着你将得到50年1000倍的回报。换句话说，年化收益差5%，50年坚持下来，收益差了10倍，这就是复利的力量。 反过来算，如果你想20年实现50倍，那么你的年化得达到22%才行，这几乎是巴菲特的水平，几乎不可能实现。20年20倍，都要达到17%的年化才行。所以算算你的目标吧，你到底要赚多少钱？然后制定一个比较保守的财务自由目标，和一个相应的复利标准。 举个例子，张三月收入2万，媳妇月收入1万，有房有车有房贷，月开销2万，目前有存款50万。他要想实现财务独立，至少需要每月有2万，一年24万的财务收入才行，而按照安全的算法，总资产的3%，是你可以用来做消费提取的，换句话说，张三他们家必须得有800万才能够实现财务独立。50万增长到800万，需要增长16倍，如果是年化15%的增长，他需要20年，如果年化10%的增长，他需要30年。如果他要想让财务独立的日子更快实现，那么他就必须要压缩开支，多拿出盈余来投资，同时保持一个较高的收益率。比如他每个月结余1万，第一年就是12万，这12万在按照10%的年化增长，在未来19年可以贡献61万，而第二年剩下的12万，可以在未来18年贡献55万。以此类推，即使他的年化收益只有10%，把每月结余都拿出来投资股票资产，或者做投资组合，他也大概只用不到20年就可以实现财务独立。 更何况张三好好努力，他未来还有升职加薪的机会，可以把更多的钱拿来投资，而且月支出两万元，已经是一个非常高的支出标准了。一旦他还完房贷，可能支出就会大幅下降，届时又可以节省一笔支出，从而让支出更少，财务自由的门槛也就更低了。所以，每个人其实都有机会实现自由和晚年幸福。而且每年10%的收益并不很高，或者说你只需要现在买入并持有20年，基本上就是市场平均收益。 所以别为追求高回报而冒险了，稳稳的通过复利，过上衣食无忧的生活，这种事努努力很容易实现。反而是追求高回报，来回折腾，让复利中断，才是最大的风险。但很可惜90%的人到死都不会明白。不折腾！这三个字蕴含的智慧。 var className='atoc';"},"invest/book.html":{"url":"invest/book.html","title":"书单","keywords":"","body":"书单 财商教育 资产配置 基金 定投 周期 估值 右侧交易 财商教育 资产配置 基金 定投 周期 估值 右侧交易 var className='atoc';"},"invest/family-assets.html":{"url":"invest/family-assets.html","title":"家庭资产如何配备","keywords":"","body":"家庭资产如何配备 理财是理财，投资是投资，理财里面包含了流动性，消费，保障和投资四个部分，投资只是其中的一块。对于家庭的所有财产来说，全都拿去投资，其实并不合适。 在国际上，有一个简单的标准普尔家庭资产示意图，这也是一般理财师会做出的资产配置方式，会将家庭资产分为四个部分。这张图分为四个象限，右上象限，是要花的钱，右下象限是保命的钱，左上是保本的钱，左下是升值投资的钱。 第一是要花的钱，也就是右上象限，重点在于流动性，这部分给了两个标准，一个是总资产的10%，另一个是3-6个月的生活费，看哪个需要的钱多，你就用哪个标准。比如你家每月要花5000，你一共就50万存款，那么10%就是5万，而6个月生活费是3万，那么你就准备5万块钱放在这里。如果你就10万存款，10%只有1万，生活费却需要3万，那你就准备3万放在这里，这是一个必须要保障的位置。这部分理财可以放在货币基金里，或者买一些短债，要求流动性好，又绝对安全，必须要保本保收益。 第二是保命的钱，也就是右下象限，这块是保险的份额，大概占到20%，其实对于家庭来说，只需要买四类保险： 1、百万医疗险，解决的是大额医疗费全额报销的问题，大概一年也就是千把块，有这个东西就基本上不用再担心看不起病的问题了。 2、重疾险，主要是重大疾病的保障，也就是那些不报销的重大疾病，这种重疾险也不是特别贵一年也就几千块钱，就能保几百万。而且要选择保费豁免，最好是夫妻一起投，选择既有投保人豁免也有被保人豁免，夫妻相互投保。这样一旦有人得病，两份保单同时有效，后面的保费也就都不用再交了，能省不少钱。 3、定期寿险，只给家里的经济支柱买，老人和孩子不用买，因为买了也赔不了多少钱，主要是给家里其他人的生活费。 4、意外险，主要保意外事件，这个也并不贵，一家子下来，一年一万块钱左右就应该够用了。 第三是保本的钱，也就是左上象限，这部分钱重点在于保本保收益，对于流动性没那么大的要求了，他的标准是40%，也就是说你要将自己财产的一小部分都放在这里，这其实跟资产配置里的债券基金部分基本吻合。可以投资一些长债基金，在利率急速上升的时候，这部分钱与货币基金相互替换。 第四是投资的钱，也就是左下象限，这部分应该投资一些相对的高风险资产，比如股票，商品期货，股权基金等等，大概占你总资产的30%左右，这部分跟你的右上象限合并计算，也就是说如果10%的钱不够你覆盖6个月生活费的情况下，优先从投资的部分里面扣减。扣减了要花的钱之后，也就确定了投资的这部分钱，可以跟左上角的内容合并，左半侧就是常说的用来投资的钱。无论做半自动组合，还是做我们的股债商品全天候配置组合，都是可以的。比例也基本上差不太多。 var className='atoc';"},"invest/retire.html":{"url":"invest/retire.html","title":"一套财务自由方案","keywords":"","body":"一套财务自由方案 做好自己该做的事情，不天天关注市场，有时间，多看书、多读报、多锻炼。 多少钱可以财务自由，其实这个没有绝对的标准，完全跟个人的消费能力有关，如果你想买私人飞机，那么20亿也未必自由，如果你只想过普通人的生活，其实用不了几百万就自由了，这套方案就跟把大象放进冰箱一样简单，只有三个步骤。 第一步，把你每月要花的钱，准备出12个月。放在账户1里面，这个账户只投资货币基金，哪个收益高就投哪个，货币基金绝对安全。假设你每月觉得1万块钱就够了，那你就准备12万。明年开始，每个月从这个账户里面领取，一个月1万元。 第二步，再准备一个账户2，从第二年开始，你的钱都要从这个账户里拿了，这个账户需要准备10年的月开销，还是假设你一个月1万开销，那么一年就是12万，10年就是120万，准备120万放在这个账户里，进行资产配置投资。按照保守的5%计算，每年也会有几万的回报，第一年取货币基金，第二年开始是120万X1.05=126万，被拿走12万，还有114万，第三年就是114万X1.05=119.7万，取走12万，还剩107.7万，以此类推到第16年的时候，这个账户就取干净了。 第三步，把剩余的钱，放到第3个账户里，这个账户以均衡资产为主。投资两个偏债基金，两个指数基金，一个股债均配的。如果以10年以上为周期，只要不看不动，这个组合应该可以获得10%以上的年化回报，而且会非常稳定。把剩下的钱全部投入到这个账户3里面就好，大概是16年翻4倍，而我们把之前两个账户花完的时候，应该就是第16年了，假设你还有100万资金，那么到时候这个账户里保守估计应该有400万资金，到时候你就把他取出来，按照上面的分配方法，再重新分配一遍就好。 另外，这个账户你要每年看一下，在年化10%以下的回报，你不用理他，而如果年化回报超过15%了，你就要止盈。然后等到他跌下来再买回去。举个例子，你买进去后可能5年不涨，这都不要理他。如果第6年开始暴涨，3年翻了4倍。总收益9年4倍，年化回报超过了16%，这时候你就需要出来休息一下。即便你出来等5年，没有收益，你的总回报都依旧超过10%。而这5年中，有很大可能会出现价值回归。 所以算一下，12万+120万+100万=232万，你只需要这么多钱，就可以实现一个月入万元的自由生活。当然你说我月入一万不够花，那么你月入2万，3万，5万都可以，方法是不变的。你要月开销达到5万，第一个账户就要存入60万，第二个账户要存入600万，第三个账户至少要有500万，也就说你有1160万，就可以实现一个月开销5万，年开销60万的自由生活了。这么算下来，你是不是发现，其实自由，不一定需要太多的金钱。 当然这里面我们打出了富裕，16年后，你的账户3里有4倍的资金，足够你再做一次资金分配，而且生活费支出可以提高50%，这个足以应对通胀的影响。但是如果你更小心谨慎，那么在账户2的时候就要考虑，每年都要比上一年多支出5%，用于应对通胀，那么账户2的消耗速度也就更快，那么此时你就得在账户2准备170万资金。公式是170万X1.05-12X1.05，把这个公式套入电子表格中就能算到16年后的结果。 也就是说，按照最保守的，考虑通胀的算法，月开销1万的生活，你只需要准备282万就足够了。月开销5万的生活，准备1410万。也并不是特别多。很多人唯一不踏实就是账户3，能否保持年化10%的增长，万一遇到极端，股市16年都没涨怎么办，这种情况，你每月该取多少钱，就继续取多少钱，从这个账户里往外拿。不用再分配。这里面够你再取上7-8年的，20年都没有一个大牛市的股市，历史上从没有发生过。这是一个极小极小的概率，而且即便真是这样，那么债券价格也早就涨上天了，第二个账户你都未必用的完。 var className='atoc';"},"invest/do-not-be-fooled.html":{"url":"invest/do-not-be-fooled.html","title":"千万别听销售经理瞎忽悠","keywords":"","body":"千万别听销售经理瞎忽悠 基金的业绩到底有没有参考性，应该说是有的，就好比一个孩子，他经常考试都是名列前茅，我们还是能说这是一个好孩子的，但是这只限于长期范畴，甚至要经过几个周期来判定，而某一次考试突然名列前茅，反而值得怀疑，就好比有些基金，一直业绩一般，突然某一年业绩大涨。为什么？基本上就是狗屎运而已，赶上了这波行情，刚好适应这只基金的策略和风格，或者赶上了某只重仓股连续被炒作，所以业绩大幅度提升。这种业绩不但不具备参考性，反而应该视为反向指标。也就是说一只基金在短期内业绩大涨，反而应该视为一种风格到头的信号。 比如国泰成长，在2018年初的业绩达到顶峰，还拿了金牛奖，但是翻看之前的历史，他是比较激进的一种风格，只有2016年以来明显跑赢市场，所以这就是赶上了一波行情，到了2018年，回撤可就大了，几乎掉了40%，但是这样一只曾经拿过金牛奖的基金，在大幅跑输市场之后，反而迎来了重要的投资机会。最近6个月又明显跑赢市场，回到了2018年的顶峰。所以基金跟孩子一样，从小一帆风顺，没经历过挫折，不是什么好事，短期内特别顺利，也不是什么好事。 其次，我们都知道，80-90%的主动基金长期下来的年化回报很难跑赢指数。华尔街有研究机构做了测试，选择一段时间跌的最多的基金，一段时间涨的最多的基金，和指数放在一起做对比测试，最后发现了一个现象，买热门基金的收益是最差的，而买指数和买最冷门基金的表现不确定，这就告诉我们，一定不能追热门，大热必死。至于要不要买冷门，让你买跌的最多的基金，你也很难接受。所以还是踏踏实实买指数吧。这个不是最好的，但也是相当好的选择。 第三，不得不承认，主动基金中确实有好的，也有高手，但是胜率确实太低了，你从热门基金里找出真有本事的基金，比你选择优秀个股的难度可能也差不多。那这些优秀的业绩是怎么产生的呢？世界杯的时候赌过球吗？说对冠军挺难的，但是你要每只球队都赌一遍，那就肯定有一个是正确的了，其实基金公司就是这么干的，所以他们总可以制造出明星基金，从而通过这些明星基金，来圈投资者的钱。这在公募基金行业已经非常普遍，公募基金吃的就是管理费，所以对他们来说规模很重要，当一个基金经理，取得好的业绩之后，他们就倾向于赶紧让他再多发一只产品，从而上规模，如果能募集50亿，那么对于基金公司来说，一年管理费就增加了几千万。而他的成本几乎是零，这个基金经理的团队都是现成的，甚至有的连重仓股都不换，就复制到新发的基金上去。 基金公司通常产品线会比较齐全，有投蓝筹的，有投成长的，有均衡策略，有价值策略，还有成长策略，再不济也会有至少10来个行业基金各自蹲守据点，所以市场某一时刻倾向于某种风格，就一定会有某个产品，符合这种风格，从而业绩大涨，比如2020年初，这些半导体基金大涨，那些投资半导体的基金经理，马上就站出来发新基金了。 因此： 千万别被理财经理洗脑，他们告诉你的热门基金，大多不靠谱，业绩太好反而是个坑，甚至可以当成反向指标。 也最好不要去买冷门，因为冷门总让人很难受，比如现在让你买传媒，买环保，买汽车，不知道这些行业是不是趋势性衰退，从长期看，买冷门和买宽基指数表现差不多，选股的难度远比择时大的多，所以尽量不要做选行业和选股的工作，胜算太低。 热门行业的基金更不要考虑，因为基金公司会把每个球队都预测一遍，总会有一个是对的，所以某一个行业基金涨的好，跟基金经理毛关系都没有，只是他的马快，这段时间顺风罢了。过一段风向变了，马换了，他就该倒霉了，比如半导体基金，现在都在吹最近半年翻倍的事，而2018年大跌一半的事，从来没人提。 不买新基金，因为新发基金，基本都是热门基金的经理挂帅，思路都是市场最热的思路，跟追热门没什么区别，有个别基金可能还行，但是这种方法，失败的概率极高。所以永远记住，不买新基金就对了。 var className='atoc';"},"invest/sharpe-ratio.html":{"url":"invest/sharpe-ratio.html","title":"夏普比率","keywords":"","body":"夏普比率——基金评估的核心指标 基金怎么算好怎么算差呢？我们的方法就是看涨跌，似乎涨的好的就是好基金，涨的差的就是垃圾，但其实在基金行业里，评论基金好坏的有个专用指标叫做夏普比率。 夏普比率计算公式：=[E(Rp)－Rf]/σp E(Rp)：投资组合预期报酬率 Rf：无风险利率 σp：投资组合的标准差 从组合的字面意思就能理解，每一份收益，对应了多少风险。所以夏普比率是收益和风险的系数，夏普比率大于1，就说明收益大于风险，而小于1 就说明，收益小于风险。不过这个数也是动态的，这个基金表现好的时候，夏普比率就大，而这个基金表现欠佳的时候，夏普比率就小。所以它不适用于自己跟自己比，而适用于同一时间，几只基金的横向比较。 用专业的基金经理的话来说，基金涨的多少并不重要，重要的是他在冒了多少风险的情况下涨成这样的，在晨星基金的基金查询页面，我们都会看到不同基金，对应不同时间段的夏普比率。 对比一下，上面是广发稳健的，下面是兴全趋势，显然广发稳健在过去的三年，收益大于风险，夏普比率很高。原因就是他有一半债券持仓。相对来说，最近三年行情不佳，兴全趋势的风险就会更大。 从走势来看也印证了这一点，现在广发稳健的收益更高一些，但从历史走势来看，广发稳健波动也更小。而兴全趋势在2018年底，几乎回撤的没有收益了。如果要是普通的投资者来说，显然广发稳健这种走势是更容易接受的。 欧阳凯的工银双利债之所以一直强调夏普比率，是因为他做的足够好，工银瑞信双利债的夏普比率，比广发稳健还要高，但是从收益上来说，工银双利债的表现，肯定跟广发稳健没法比。 最近3年广发稳健涨了41%，而工银瑞信双利债才16%，但是如果要比风险回报，显然工银瑞信双利债会更稳定。几乎没有波动，而广发稳健，在2018年也面临全年回撤了7.86% 再看纯债，这是招商产业债的夏普比率，已经超过2了，说明什么，基本就不太可能亏钱。收益远大于风险。 最近3年在收益上，招商产业债跟工银双利债几乎差不多，但是招商产业债，几乎连走平都没有，这就是以波动更小的方式，获得同样的收益，所以他的夏普比率就会更高。 那么这个夏普比率怎么用？ 这是用于主动管理基金的指标，用来衡量基金管理者的风险控制能力，所以指数基金不在他的统计当中。 同类基金相互比较，可以选出更为优秀者。 比如南方宝元债和工银双利债，都是二级债基，两个就可以比较一下夏普比率，工银双利债的夏普比率更高，显然就是他的走势更稳，风险也更小。 南方宝元债2018年的回撤还是比较大的，回撤幅度超过5%，而同一时间段，工银双利却是上涨的，3年收益差别不大的情况下，显然工银双利更容易坚持下来，投资者也更容易赚到钱。 不同类的主动基金进行比较，如果想做逆势投资的朋友，也应该关注夏普比率，一个好基金，夏普比率下降的很厉害，说明波动他很可能遭遇了挫折，受了重伤，反而构成了一个定投的好机会。未来收益可能会变大。比如国泰估值优势，三年夏普比率比五年夏普比率低了太多，说明这三年他波动过大。那么未来他的弹性可能会非常大。 就像一个好学生，最近考试没考好，那么下次考试他排名提升的概率就会很大。 最近一段时间，国泰估值优势的弹性优势已经显现出来了。 小白投资者没有什么投资经验还想赚钱的，最好选择夏普比率高于1的基金，并且长期持有。通常情况下，夏普比率高于1的基金，都是债基，二级债基，或者最次也是股债均配的基金。 var className='atoc';"},"invest/excellent.html":{"url":"invest/excellent.html","title":"各行业优秀的股票和基金","keywords":"","body":"各行业优秀的股票和基金 银行 证券 保险为代表的非银金融 有色金属、稀土 食品饮料、消费行业 医药生物 国防军工 传媒、互联网 电子、计算机 环保、低碳、新能源 银行 代表公司： 工商银行、建设银行、农业银行、中国银行、招商银行、兴业银行。 代表基金(场内)：华宝中证银行ETF(512800)。 代表基金(场外)：鹏华中证银行指数(LOF)(160631)、招商中证银行指数(161723)、天弘中证银行ETF联接A(001594)。 投资方法： 银行见底有着明确的标志，就是工农中建达到0.7倍pb，一旦出现这种情况，就表示出现了安全边际，现在中行达到了但是工行没达到，所以可能银行接近底部区域，但是并非是特别低估。有可能下面还有再跌10%-15%的空间。 银行这种东西是当类债券的投资工具用的，比如现在买有5%的分红，已经高于了一般债券，买来以后你可以就吃分红，不顾股价，适合于需要现金流的人。 银行的投资没必要买基金，因为一共就几只，哪只基金做配置，他也得买这几家银行，只是配比不同。 投资银行行业，长期回报肯定低于指数回报。银行是波动性最低，收益也最低的行业，没有之一。 证券 代表公司：中信证券、海通证券、国泰君安、华泰证券、招商证券。 代表基金(场内)：国泰中证全指证券公司ETF(512880)。 代表基金(场外)：申万菱信中证申万证券行业指数(163113)、富国中证全指证券公司指数(LOF)(161027)。 投资方法： 证券有明显的反身性，一般都是右侧追击，而不进行左侧布局。 反身性会让他越跌业绩越差，越跌估值越高，相反越涨业绩越好，越涨估值越低，所以当你看到证券行业业绩大增，往往是整个市场见顶的标志，证券行业业绩暴跌，恰恰是市场见底的标志。 如果非要找证券行业的底部，有一个简单的办法，可以大概估计。那就是中信、海通、国泰君安这种大券商跌破每股净资产，一般就是证券的底部。再下跌的空间也就有限了，但招不是特别准。需要多家券商验证，比如上面说的那三家都跌到净资产附近了，基本也就差不多了。 证券行业有很强的周期性，不适合长期投资，所以有人一说要长期投证券行业，你就知道他根本就是个外行。 保险为代表的非银金融 代表公司：中国平安、中国人寿、中国人保。 代表基金(场内)：易方达沪深300非银ETF(512070)。 代表基金(场外)：鹏华证券保险指数(LOF)(160625)。 投资方法： 保险跟证券略有不同，除了投资的反身性，还有因为是传统业务，所以可以左侧投资。 保险的走势跟大盘走势基本一致，所以大盘到底了，保险就基本可以投资了。一般保险公司的投资，都是选择在股灾之后入局。然后长期持有。 保险公司业绩也有周期性，并不会利润一直增长。比如现在中国平安的业绩就太好了，好的已经很难持续了。 有色金属、稀土 代表公司：紫金矿业、山东黄金、天齐锂业、方大炭素、江西铜业。 代表基金(场内)：南方中证申万有色金属ETF(512400)。 代表基金(场外)：国泰国证有色金属行业指数(LOF)(160221)。 投资方法： 有色金属是强周期行业，必须看他的基础金属走势，比如要买山东黄金，就得关注金价，买天齐锂业就要关注碳酸锂价格，买云南铜业就得关注伦敦铜，股价和基础金属的价格相关性很高。 整个行业的投资，首先要看铜价是否抬头，其次看PPI是否上升，最近铜价已经逐渐恢复，特别是波罗的海指数BDI快速反弹，说明需求开始上升，那么有色金属的价格回升应该是大概率事件。不过伦铜的表现和PPI的表现都还不明显，还需要耐心等待。 有色金属是典型的经济强周期，也是不能长期投资，必须要顺势而为。在业绩最好的时候离开，在业绩最差的时候逐渐布局。 食品饮料、消费行业 代表公司：贵州茅台、五粮液、海天味业、伊利股份、格力电器、美的电器。 代表基金(场内)：汇添富中证主要消费ETF(159928)。 代表基金(场外)：易方达消费行业股票(110022)、招商中证白酒指数(LOF)(161725)。 投资方法： 从长期来看，最好的投资对象就是消费行业，而消费行业里最好的投资对象就是白酒，长期涨幅长期跑赢指数。 这个行业是弱周期行业，更应该长期持有，而不做短差。买的便宜，是最重要的投资之道。一般都是在出现一些负面消息的时候，是布局这个行业最佳时机。 他们的估值波动区间非常稳定。算出历史估值最低点，基本就具备安全边际。总之就是有迹可循，一般用PEG估值，PE不能高出可持续的增长率太多。 医药生物 代表公司：中国医药、恒瑞医药、同仁堂、华东医药、云南白药、长春高新、华兰生物、爱尔眼科、通策医疗。 代表基金(场内)：易方达沪深300医药ETF(512010)。 代表基金(场外)：申万菱信中证申万医药生物指数(LOF)(163118)、汇添富医药保健混合A(470006)。 投资方法： 医疗是典型的弱周期，一般在需要稳定的业绩的时候，才会投资医疗。医药的估值通常比较高，可以用PEG估值，通常能给到1.5-3倍的PEG。因为他的周期比较长，比如100年以后同仁堂大概率还存在，但腾讯阿里却不好说。 医疗生物的表现时机往往晚于大盘，在市场见顶之后，医疗还有一段表现时机。所以一般是防守周期，才去投资医疗。 医疗可以长期持有，其实医疗长期持有的结果应该好于消费，因为医疗生物的消费刚性更强，但是在中国A股目前来看，医疗表现弱于消费。未来长期的预期收益率不低。 医疗表现差的时候，往往是周期走强的时候，比如2016年这一波周期复苏，医疗表现较差。也就是说，在没什么可投的情况下大家才会选择医疗，在强周期的时候，医疗会被淡忘。 国防军工 代表公司：中国重工、航天电子、航发动力、中航飞机、卫士通、中国卫星。 代表基金(场内)：国泰中证军工ETF(512660)、广发中证军工ETF(512680)。 代表基金(场外)：前海开源中证军工指数A(000596)、富国中证军工指数(LOF)(161024)。 投资方法： 军工企业的投资基本都差不多，也就那么几家企业可以选。所以基金的业绩表现类似。 军工只有在大牛市才有机会，通常都是并购重组比较活跃。 不能长期持有，因为大部分公司，没有业绩。 这个行业也没法估值，都是2B业务，而且相当不稳定。所以就不用费劲看什么财报了，就想想是不是大牛市就可以了，没有大牛市预期千万别买。 当银行到处推荐军工基金的时候，说明牛市即将结束。 传媒、互联网 代表公司：东方财富、分众传媒、网宿科技、东方明珠、万达电影、华谊兄弟、光线传媒。 代表基金(场内)：广发中证传媒ETF(512980)。 代表基金(场外)：鹏华中证传媒指数(LOF)(160629)。 投资方法： 传媒的风格在于中小创的成长上面，这几年整个市场的风格都在价值上，所以传媒表现相当惨淡。 传媒业绩有明显的行业周期特征，最近反正是受到各种利空消息的影响，估值已经跌破历史估值底部，但仍然不知道什么时候能够回升，目前看不到希望，跟整个的大环境有关。 传媒主要靠外延并购获得业绩增长，所以他的估值意义并不大，需要行业整合，才能推动估值提升，算他的现金流和利润，意义不是很大。但行业整合，也往往发生在这个版块走牛的时候，这样外延增长才能反应在市值上。 所以传媒是一个反身性行业，跟券商类似，牛的时候会很牛，熊的时候会很熊。现在恰恰就是四面楚歌的时候，感觉喝口凉水都塞牙。 这个版块最好做右侧趋势投资，不要做左侧逢低布局，因为你找不到估值底。 电子、计算机 代表公司：海康威视、科大讯飞、恒生电子、大华股份、三安光电。 代表基金(场内)：广发中证全指信息技术ETF(159939)。 代表基金(场外)：长盛电子信息产业混合(080012)、天弘中证电子ETF联接C(001618)。 投资方法： 电子主要通过业绩增速估值，利润不会有多少。 更倾向于中小创，在大牛市里跑不赢指数，但是防守的时候比指数强一点有限，需要有市场中成长风格的配合。 有很广阔的业绩想象空间，但编编故事还行，不一定能兑现。所以当你发现一个特别美好的故事的时候，千万别太当真。 行业基金其实表现一般，冒了很大的风险，但其实总体上，也就跟中小创指数差不多，所以不如只配中证500+创业板。 环保、低碳、新能源 代表公司：上海环境、阳光电源、天顺风能、启迪桑德、伟星新材、亿纬锂能、隆基股份。 代表基金(场内)：广发中证环保ETF(512580)。 代表基金(场外)：嘉实环保低碳股票(001616)。 投资方法： 曾经环保风光过，但是2017年下半年以后就非常惨淡。这个行业主要靠政府给钱，政府一旦没钱了，环保业绩就会大幅回落。 政府是其大客户，但并不稳定，经常拖欠资金，所以让企业利润很不稳定，估值几乎无法计算。 主要看经济周期，基建扩张的时候，环保行业大有所为，一旦政府预算收紧，环保行业就会比较惨淡。 var className='atoc';"},"tech/google_hacking.html":{"url":"tech/google_hacking.html","title":"Google Hacking语法","keywords":"","body":"Google Hacking语法 关键词 通配符 关键词 关键词 说明 site 搜索范围限制在该域名中，例如：“site:www.4ngel.net”将返回所有和该站有关的链接 inurl 搜索指定的字符是否存在于URL中，例如：“inurl:admin”将返回N个包含admin字符的链接 filetype 搜索特定类型文档，例如：“filetype:doc”将返回所有以doc结尾的文件URL intext 正文中搜索某个字符，例如：“intext:中国”将返回所有在网页正文部分包含”中国”的链接 intitle 标题中搜索某个字符，例如：“ntitle:安全天使”将返回所有网页标题中包含”安全天使”的链接 cache 搜索谷歌缓存页面 define 查询单词或者术语的定义，例如：“define:hacker”将返回关于hacker的定义 info 查找指定站点的一些基本信息 link 搜索所有链接到某个URL地址的网页，例如：“link:www.4ngel.net”将返回所有和该网址做了连接的链接 inanchor 锚链链接搜索在做网站中有时候用锚点来链接一个页面中的其它部分内容，这样方便浏览和定位，也就是说锚点链接的内容通常是网页内容中重要的章节或内容的开始部分，因而对它们的搜索也更能反映网页的主题内容，提高搜索结果的准确度 related 相关网址查找与某个页面结构内容相似的页面，“related”用来搜索结构内容方面相似的网页，比如当你用related搜索一个图书馆网址的时候会出来大量图书馆的网站，如：related:lib.nit.net.cn 通配符 通配符 说明 “” 在关键词加双引号会实现精确搜索，不进行分词 ※ 谷歌的通配符星号“*”必须在精确搜索符双引号内使用，用通配符代替关键词或短语中无法确定的词 . 与通配符星号“*”不一样的是，点号“.”匹配的是字符，不是字、短语等内容 .. 两个点号“..”表示一个数字范围，一般应用于日期、货币、尺寸、重量、高度等范围的搜索 + 加号“+”用于强制搜索，即必须包含加号后的内容，一般与精确搜索符一起应用 - 关键词前加“-”减号，要求搜索结果中包含关键词，但不包含减号后的关键词 () 括号“()”是分组符号 var className='atoc';"},"tech/vps.html":{"url":"tech/vps.html","title":"搭建愉快服务器","keywords":"","body":"搭建愉快服务器 免费or收费 远程连接工具 安装搭建脚本 小飞机下载 免费or收费 网上有很多免费的科学上网工具，但一般带宽设限使用时相当慢，其次则是客户端广告较多影响体验。因此比较推荐购买 VPS 主机资源进行服务器搭建。 国内市占率较高的主要有两家，分别是 搬瓦工 与 Vultr ，两者之间的主要区别在于：前者是按年或月收费，后者则按照使用时长收费。 购买链接： 搬瓦工购买链接 Vultr购买链接 远程连接工具 下载SecureCRT远程连接软件，安装后使用。 安装搭建脚本 使用Secure CRT工具连接成功后，粘贴下面的命令进行操作： [root@vultr ~]# yum install -y wget && wget --no-check-certificate -O shadowsocks-libev.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/shadowsocks-libev.sh && bash shadowsocks-libev.sh 回车后系统会自行下载脚本文件并运行，按照下图提示，我们输入1选择安装服务，回车继续： 2020-01-12 15:44:00 (51.7 MB/s) - ‘shadowsocks-libev.sh’ saved [21414/21414] ============================================== Shadowsocks Server Management Script (libev) ============================================== 1. Shadowsocks Server Install 2. Shadowsocks Server Uninstall 3. Shadowsocks Server Update ---------------------------------------------- 4. Shadowsocks Server Start 5. Shadowsocks Server Stop 6. Shadowsocks Server Restart ---------------------------------------------- 7. Shadowsocks Config Status 8. Shadowsocks Config Modify ============================================== Not installed Please Enter the Number:1 回车后系统会进入安装界面，我们首先依次输入 SS 的各项信息，然后回车继续即可： [Info] Start set shadowsocks's config information... [Info] Wherever you are not sure, just press Enter to continue. Please enter shadowsocks's password [Default is 123456]: ------------------------------- Shadowsocks's Password: 123456 ------------------------------- Please enter shadowsocks's port (1~65535) [Default is 33526]: ------------------------------- Shadowsocks's Port: 33526 ------------------------------- Please select shadowsocks's stream cipher 1) aes-256-gcm 2) aes-256-ctr 3) aes-256-cfb 4) chacha20-ietf-poly1305 5) chacha20-ietf 6) chacha20 7) rc4-md5 [Default is aes-256-gcm]:3 ------------------------------- Shadowsocks's Streamcipher: aes-256-cfb ------------------------------- Press Enter to continue...or Press Ctrl+C to cancel 安装过程耗时 2~5 分钟，完成后会来到下图界面： [Info] Congratulations, Shadowsocks has been installed successfully. ================================================= Server IP : 1.1.1.1 Server Port : 33526 Password : 123456 Encryption Method: aes-256-cfb ------------------------------------------------- ss://YWVzLTI1Ni1jZmI6TnVtYmVyMTQzMzIyM0AxNDkuMjguMTMyLjEzMzo5NTI2 ================================================= You can find the config's backup in /root/shadowsocks.txt. For more tutorials: https://www.banwagongzw.com & https://www.vultrcn.com 接下来需要安装锐速TCP加速软件，由于系统自带内核版本太高无法安装锐速，需要进行降级，复制命令进行操作： [root@vultr ~]# wget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh && bash rskernel.sh 回车后系统会自动下载脚本并执行更换内核命令，按图提示，我们可以看到当前系统为CentOS7，等待内核更换完毕后系统会自动重启并断开连接： [INFO] System OS is CentOS7. Processing... ------------------------------------------- Retrieving https://filedown.me/Linux/Kernel/kernel-3.10.0-229.1.2.el7.x86_64.rpm Preparing... ################################# [100%] Updating / installing... 1:kernel-3.10.0-229.1.2.el7 ################################# [100%] ------------------------------------------- [INFO] Success! Your server will reboot in 3s... [INFO] Success! Your server will reboot in 2s... [INFO] Success! Your server will reboot in 1s... [INFO] Reboot... 系统重启后，软件会断开连接，等待3分钟左右服务器即可重启完毕，我们重新连接服务器，按图提示，我们继续复制命令： // [root@vultr ~]# yum install net-tools -y && wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh && bash appex.sh install wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh && bash serverspeeder-all.sh 回车后系统会自动下载脚本并执行，按图提示，我们直接回车继续即可： Local Time : 2020-01-12 [16:00:09] ====================================================== | serverSpeeder | | for Linux | |----------------------------------------------------| | -- By .Vicer | ====================================================== Preparatory work... Press Enter to Continue... Preparatory work... Press Enter to Continue... Archive: /tmp/appex.zip inflating: /tmp/appex/install.sh creating: /tmp/appex/apxfiles/ creating: /tmp/appex/apxfiles/bin/ inflating: /tmp/appex/apxfiles/bin/renewLic.sh inflating: /tmp/appex/apxfiles/bin/serverSpeeder.sh inflating: /tmp/appex/apxfiles/bin/setConfig.sh inflating: /tmp/appex/apxfiles/bin/showConfig.sh inflating: /tmp/appex/apxfiles/bin/update.sh inflating: /tmp/appex/apxfiles/bin/utils.sh creating: /tmp/appex/apxfiles/etc/ inflating: /tmp/appex/apxfiles/etc/config Lic generate success! Installation done! 回车继续后系统会自动安装锐速，同时会先后要求我们设置锐速的三项信息，按图提示，我们每次都直接回车继续即可： ---- You are about to be asked to enter information that will be used by ServerSpeeder, there are several fields and you can leave them blank, for all fields there will be a default value. ---- Accelerate VPN (PPTP,L2TP,etc.)? [n]: Auto load ServerSpeeder on linux start-up? [y]: /etc/centos-release:CentOS Linux release 7.7.1908 (Core) /etc/os-release:NAME=\"CentOS Linux\" /etc/os-release:PRETTY_NAME=\"CentOS Linux 7 (Core)\" /etc/os-release:CENTOS_MANTISBT_PROJECT=\"CentOS-7\" /etc/redhat-release:CentOS Linux release 7.7.1908 (Core) /etc/system-release:CentOS Linux release 7.7.1908 (Core) Run ServerSpeeder now? [y]: 设置完三项信息完成后，系统会完成锐速安装并输出锐速的运行状态，按图提示，当出现红框内信息时说明锐速已完成安装并开机自启动： (license 628A71EDC5706E97151885d3) [Running Status] ServerSpeeder is running! version 3.11.20.10 [License Information] License 628A71EDC5706E97 (valid on current device) MaxSession unlimited MaxTcpAccSession unlimited MaxBandwidth(kbps) 1024000 ExpireDate 2035-12-31 在使用的过程中如果需要修改相关的配置信息，请使用下面的命令： 附一、修改Shadowsocks的配置信息 如果你以后需要修改Shadowsocks的配置（比如密码、端口或者加密），可以运行下列命令： 中文版：bash shadowsocks-libev_CN.sh 英文版：bash shadowsocks-libev.sh 然后选择第 8 项：修改Shadowsocks配置即可重新设置Shadowsocks的密码、端口以及加密方式。 附二、卸载Shadowsocks服务 如果你以后需要卸载Shadowsocks服务，可以运行下列命令： 中文版：bash shadowsocks-libev_CN.sh 英文版：bash shadowsocks-libev.sh 然后选择第 2 项：卸载Shadowsocks服务即可从服务器中卸载掉Shadowsocks服务。 小飞机下载 安装完成后，需要在我们需要科学上网的设备上安装相应软件来连接，下载Shadowsocks小飞机，安装后使用。 var className='atoc';"},"tech/django_create.html":{"url":"tech/django_create.html","title":"创建第一个Django应用","keywords":"","body":"创建第一个Django应用 创建项目 创建应用与细节优化 应用创建 项目细节优化 数据库配置 创建项目 创建项目目录并安装虚拟环境： yvesdeMacBook-Air:Python yves$ mkdir Propaganda // 创建项目目录 yvesdeMacBook-Air:Python yves$ cd Propaganda yvesdeMacBook-Air:Python yves$ pipenv install // 安装虚拟环境 Warning: the environment variable LANG is not set! We recommend setting this in ~/.profile (or equivalent) for proper expected behavior. Creating a virtualenv for this project… Pipfile: /Users/yves/Documents/GitHub/Python/Propaganda/Pipfile Using /usr/local/bin/python3 (3.6.4) to create virtualenv… ⠧ Creating virtual environment...Already using interpreter /usr/local/bin/python3 Using base prefix '/Library/Frameworks/Python.framework/Versions/3.6' New python executable in /Users/yves/.local/share/virtualenvs/Propaganda-ojQAzsrM/bin/python3 Also creating executable in /Users/yves/.local/share/virtualenvs/Propaganda-ojQAzsrM/bin/python Installing setuptools, pip, wheel... done. ✔ Successfully created virtual environment! Virtualenv location: /Users/yves/.local/share/virtualenvs/Propaganda-ojQAzsrM Creating a Pipfile for this project… Pipfile.lock not found, creating… Locking [dev-packages] dependencies… Locking [packages] dependencies… Updated Pipfile.lock (ca72e7)! Installing dependencies from Pipfile.lock (ca72e7)… 🐍 ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 0/0 — 00:00:00 To activate this project's virtualenv, run pipenv shell. Alternatively, run a command inside the virtualenv with pipenv run. 启动开发环境并安装Django： yvesdeMacBook-Air:Propaganda yves$ pipenv shell // 启动虚拟环境 Launching subshell in virtual environment… bash-3.2$ . /Users/yves/.local/share/virtualenvs/Propaganda-ojQAzsrM/bin/activate (Propaganda) bash-3.2$ pipenv install Django // 安装Django Installing Django… Adding Django to Pipfile's [packages]… ✔ Installation Succeeded Pipfile.lock (12ffd6) out of date, updating to (ca72e7)… Locking [dev-packages] dependencies… Locking [packages] dependencies… ✔ Success! Updated Pipfile.lock (12ffd6)! Installing dependencies from Pipfile.lock (12ffd6)… 🐍 ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 4/4 — 00:00:04 Django常见命令有创建项目、创建应用、创建超级用户、数据表创建及更新、启动服务器等，这些命令都包含在 django-admin.py 和 manage.py 里。除此以外 manage.py 还包含其它有用的命令，基本包含： 创建新项目：django-admin startproject project_name 创建新应用：python manage.py startapp app_name 检测模型变化生成新的数据库迁移文件：python manage.py makemigrations [app_name] 同步数据库与模型：python manage.py migrate 启动服务器：python manage.py runserver 创建超级用户：python manage.py createsuperuser 修改用户密码：python manage.py changepassword username 打开交互终端：python manage.py shell（dbshell指数据库交互） 查看当前版本：python manage.py version 清空数据库内容只留下空表：python manage.py flush 搜集静态文件：python manage.py collectstatic 创建Django项目并启动验证是否成功： (Propaganda) bash-3.2$ django-admin startproject Propaganda // 创建项目 (Propaganda) bash-3.2$ ll // 项目文件结构 drwxr-xr-x 7 yves staff 224 Dec 6 21:06 ./ drwxr-xr-x 12 yves staff 384 Dec 6 20:34 ../ -rw-r--r-- 1 yves staff 168 Dec 6 20:37 Pipfile -rw-r--r-- 1 yves staff 1639 Dec 6 20:37 Pipfile.lock drwxr-xr-x 7 yves staff 224 Dec 6 20:56 Propaganda/ -rwxr-xr-x 1 yves staff 630 Dec 6 20:56 manage.py* (Propaganda) bash-3.2$ python manage.py runserver // 启动项目 Watching for file changes with StatReloader Performing system checks... System check identified no issues (0 silenced). You have 17 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions. Run 'python manage.py migrate' to apply them. December 06, 2019 - 13:14:35 Django version 3.0, using settings 'Propaganda.settings' Starting development server at http://127.0.0.1:8000/ Quit the server with CONTROL-C. 在浏览器输入 http://127.0.0.1:8000/ 看到Django启动页即表示项目创建成功。 创建应用与细节优化 应用创建 项目创建成功并验证通过后就可以创建相关应用： (Propaganda) bash-3.2$ python manage.py startapp chatriq 创建成功后需要在 settings.py 文件中加入相应配置： INSTALLED_APPS = [ 'chatriq' ] 项目细节优化 在项目根目录下创建 apps 包目录，用于统一管理后期创建的应用，这需要在 settings.py 文件里新增一条配置： sys.path.insert(0, os.path.join(BASE_DIR, 'apps')) # 将apps目录加到python的搜索目录中去 修改 settings.py 文件里的配置： LANGUAGE_CODE = 'zh-hans' TIME_ZONE = 'Asia/Shanghai' USE_TZ = False 在根目录下创建 static 目录用于存放静态文件，创建 templates 文件夹用于存放模板文件，并在 settings.py 文件中添加配置： STATIC_URL = '/static/' STATICFILES_DIRS = ( os.path.join(BASE_DIR, 'static'), ) 最终，目录结构如下： (Propaganda) bash-3.2$ ll -rw-r--r-- 1 yves staff 168 Dec 6 20:37 Pipfile -rw-r--r-- 1 yves staff 1639 Dec 6 20:37 Pipfile.lock drwxr-xr-x 8 yves staff 256 Dec 6 21:43 Propaganda/ drwxr-xr-x 4 yves staff 128 Dec 6 21:41 apps/ -rw-r--r-- 1 yves staff 0 Dec 6 21:14 db.sqlite3 -rwxr-xr-x@ 1 yves staff 630 Dec 6 20:56 manage.py drwxr-xr-x 2 yves staff 64 Dec 6 21:26 static/ drwxr-xr-x 2 yves staff 64 Dec 6 21:26 templates/ 数据库配置 在 settings.py 文件中可以配置项目连接的数据库信息，由于本项目暂时不涉及数据库相关操作。 DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), } } 生成表迁移数据并在数据库中创建对应表文件： (Propaganda) bash-3.2$ python manage.py makemigrations No changes detected (Propaganda) bash-3.2$ python manage.py migrate Operations to perform: Apply all migrations: admin, auth, contenttypes, sessions Running migrations: Applying contenttypes.0001_initial... OK Applying auth.0001_initial... OK Applying admin.0001_initial... OK Applying admin.0002_logentry_remove_auto_add... OK Applying admin.0003_logentry_add_action_flag_choices... OK Applying contenttypes.0002_remove_content_type_name... OK Applying auth.0002_alter_permission_name_max_length... OK Applying auth.0003_alter_user_email_max_length... OK Applying auth.0004_alter_user_username_opts... OK Applying auth.0005_alter_user_last_login_null... OK Applying auth.0006_require_contenttypes_0002... OK Applying auth.0007_alter_validators_add_error_messages... OK Applying auth.0008_alter_user_username_max_length... OK Applying auth.0009_alter_user_last_name_max_length... OK Applying auth.0010_alter_group_name_max_length... OK Applying auth.0011_update_proxy_permissions... OK Applying sessions.0001_initial... OK 至此，Django项目应用创建完毕，后续更新编码过程中的细节与注意事项。 var className='atoc';"},"tech/django_deploy.html":{"url":"tech/django_deploy.html","title":"Django应用部署与监控","keywords":"","body":"Django应用部署与监控 部署准备 环境搭建 新增用户 Python环境 MySQL数据库 部署代码 Gunicorn安装 Nginx安装 Supervisor安装 问题与解决 图片上传报错 部署准备 一台云服务器，初级版（1核1G）即可，安装CentOS7.2版本操作系统，建议最好使用阿里云；一个已经完成ICP备案的域名。 环境搭建 新增用户 操作CentOS服务器，最好不要使用root根用户，其一是防止误操作；其二是避免在部署的过程中出现权限相关问题。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ adduser yves # 添加yves用户 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ passwd yves # 设置yves的操作密码 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ usermod -aG wheel yves # 将yves添加到超级权限组 Python环境 安装Python环境之前，需要在操作系统上安装必要软件并更新yum源。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum update # 更新yum源 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum upgrade [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum install -y openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel gcc # 安装必要软件 这个步骤需要一定时间，耐心等待完成之后再进行下一步的安装Python-3.6.4。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ mkdir src # 家目录下新建src目录存放下载文件 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ cd src # 进入src目录 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz # 下载Python-3.6.4 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ tar -zxvf Python-3.6.4.tgz # 解压 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ cd Python-3.6.4 # 进入解压目录 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ ./configure LD_RUN_PATH=/usr/local/lib LDFLAGS=\"-L/usr/local/lib\" CPPFLAGS=\"-I/usr/local/include\" [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ make LD_RUN_PATH=/usr/local/lib # 编译 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo make install # 安装 上述下载、编译、安装等操作完成后，需要验证是否安装成功，出现下列版本信息即表示安装成功。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ python3 -V Python 3.6.4 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ pip3 -V pip 19.3.1 from /usr/local/lib/python3.6/site-packages/pip (python 3.6) 安装最好用的python虚拟环境和包管理工具pipenv。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo pip3 install pipenv 问题：sudo: pip3: command not found 在环境变量中添加 alias sudo='sudo env PATH=$PATH' 并使其生效即可。 MySQL数据库 CentOS默认安装mariadb数据库，首先你需要卸载. [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ yum remove mariadb-libs.x86_64 安装MySQL数据库。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ cd ~/src/ # 进入src目录 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm # 下载安装依赖文件 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum localinstall mysql57-community-release-el7-11.noarch.rpm [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum install mysql-community-server # 安装MyS数据库 MySQL数据库的相关操作。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ service mysqld start # 启动 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ service mysqld stop # 停止 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ service mysqld restart # 重启 查看MySQL数据库的初始密码。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ cat /var/log/mysqld.log | grep password 登录MySQL数据库。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ mysql -uroot -p 修改MySQL数据库密码。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ SET PASSWORD = PASSWORD('123456'); 开启远程连接 mysql> show databases; mysql> use mysql; mysql> show tables; mysql> select Host, User from user \\G; mysql> update user set host = '%' where user = 'root'; Query OK, 1 row affected (0.00 sec) Rows matched: 1 Changed: 1 Warnings: 0 mysql> flush privileges; Query OK, 0 rows affected (0.00 sec) 开启genelog mysql> set global general_log_file=\"/tmp/general.log\"; mysql> set global general_log=on; 创建用户 mysql> create user 'imooc'@'%' identified by '123456'; 赋于用户权限 mysql> grant all privileges on *.* to 'imooc'@'%' identified by '123456' with mysql> grant option; # 所有权限 mysql> grant select on *.* to 'imooc'@'%' identified by '123456' with grant option; # 查询权限 mysql> revoke all privileges on *.* from imooc; # 收回权限 mysql> flush privileges; 忘记密码 [yves@iz2ze0mhixialmdhi9pn5vz ~]$ sudo vim /etc/my.cnf # 添加skip-grant-tables mysql> show databases; mysql> user mysql; mysql> update user set authentication_string = password(\"123456\") where user = 'root'; [yves@iz2ze0mhixialmdhi9pn5vz ~]$ sudo vim /etc/my.cnf # 去除skip-grant-tables [yves@iz2ze0mhixialmdhi9pn5vz ~]$ sudo service mysqld restart 部署代码 将项目代码上传到部署目录下，方法比较多，推荐使用Git进行代码版本的管理，首先需要在服务器上安装相关应用并从远程仓库拉取代码，拉取完成后修改成生产环境的配置。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum install git # 安装git应用 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ mkdir ~/apps/ # 创建项目部署目录 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ cd ~/apps/ [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ git clone '远程仓库地址' # 拉取代码 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ cd '项目目录' [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ pipenv install --deploy --ignore-pipfile # 安装所需依赖 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ pipenv run python manage.py migrate # 创建数据库 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ pipenv run python manage.py runserver 0.0.0.0:8000 # 启动服务 服务启动后，即可以通过公网IP:8000端口访问应用，注意：务必在阿里云管理控制台放开8000端口，否则无法访问。 Gunicorn安装 直接使用runserver命令启动的开发服务器并不适用与生产环境，因此使用Gunicorn作为生产环境服务器。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ pipenv install gunicorn # 安装gunicorn [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ pipenv run gunicorn projectname.wsgi -w 2 -k gthread -b 0.0.0.0:8000 # 项目目录下启动 启动服务后，即可以通过公网IP:8000端口访问应用，但此时css样式全部未加载导致页面乱的一塌糊涂，这并非bug，而是由于处理静态文件请求并不是Gunicorn擅长的事情，应该交由更专业的Nginx去做。 Nginx安装 Nginx是一个高性能的HTTP和反向代理web服务器，它的功能非常多，这里主要用它来处理静态文件以及将非静态文件的请求反向代理给Gunicorn。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum install epel-release -y [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo yum install nginx -y # 安装Nginx [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo systemctl start nginx # 启动nginx [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo systemctl stop nginx # 停止nginx [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ sudo systemctl restart nginx # 重启nginx [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ 直接在浏览器输入公网IP，看到nginx欢迎页面即表示安装并启动成功。下面就是修改应用中的settings.py配置文件，推荐Djecrety生成一个一个线上环境的SECRET_KEY。 DEBUG = False ALLOWED_HOSTS = ['127.0.0.1', 'localhost ', '公网IP或域名'] SECRET_KEY = ’***‘ STATICFILES_DIRS # 注释 STATIC_ROOT = os.path.join(BASE_DIR, 'static') # 新增 将项目的静态资源统一收集到static目录下。 pipenv run python manage.py collectstatic Nginx的配置位于/etc/nginx/nginx.conf文件中，其中项目的配置文件可以在/etc/nginx/conf.d/目录下新增，但是必须以.conf后缀结尾。 server { charset utf-8; listen 80; server_name 公网IP或域名; location /static { alias 绝对路径; } location /media { alias 绝对路径; } location / { proxy_set_header Host $host; proxy_pass http://127.0.0.1:8000; } } 配置文件新增完成之后，重启Nginx即可访问应用，至此基本完成Nginx与Gunicorn部署Django应用的目标。 Supervisor安装 由于服务器与网络存在不稳定的情况，因此直接在控制台启动应用的方式存在宕机的风险，并且没办法对相关进程进行监控，因此使用Supervisor来管理Gunicorn进程，这样当服务器重新启动或者Gunicorn进程意外崩溃后，Supervisor会帮我们自动重启Gunicorn。 由于Supervisor目前还不支持Python3，因此需要使用CentOS系统自带的python2版本进行安装。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ pip install supervisor 在家目录下新建相关的文件夹。 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ mkdir -p ~/etc/supervisor/conf.d # 创建配置文件夹 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ mkdir -p ~/etc/supervisor/var/log # 创建日志文件夹 [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ cd ~/etc/ [yves@iZ2zefeybcvjrhsdgz4uymZ ~]$ echo_supervisord_conf > supervisord.conf # 生成supervisor配置文件 修改supervisor.conf，让Supervisor进程产生的一些文件生成到上面我们创建的目录下，而不是其默认指定的地方。 [unix_http_server] file=/home/yves/etc/supervisor/var/supervisor.sock logfile=/home/yves/etc/supervisor/var/log/supervisord.log pidfile=/home/yves/etc/supervisor/var/supervisord.pid user=yves [supervisorctl] serverurl=unix:///home/yves/etc/supervisor/var/supervisor.sock files=/home/yves/etc/supervisor/conf.d/*.ini 配置修改完成之后需要在conf.d文件夹下新增应用的配置文件，注意文件必须以.ini结尾。 [program:projectname] command=pipenv run gunicorn projectname.wsgi -w 2 -k gthread -b 127.0.0.1:8000 directory=/home/yves/apps/projectname autostart=true autorestart=unexpected user=yves stdout_logfile=/home/yves/etc/supervisor/var/log/projectname-stdout.log stderr_logfile=/home/yves/etc/supervisor/var/log/projectname-stderr.log 启动supervisor。 supervisord -c ~/etc/supervisord.conf # -c 表示根据配置文件启动 进入supervisor管理控制台。 supervisorctl -c ~/etc/supervisord.conf 问题与解决 图片上传报错 这是由于Nginx的权限问题导致的，网上大多数资料说将'Chmod 777 /media'执行就好，但是我试了不行，后来将/etc/nginx/nginx.conf中的user改成root就好了。 var className='atoc';"},"other/insist.html":{"url":"other/insist.html","title":"循序渐进便有收获","keywords":"","body":"循序渐进便有收获 var className='atoc';"}}